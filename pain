#! /usr/bin/env bash

usage () {
    echo "Usage:"
}

DIR="$HOME/Wallpaper"
DWM_COLORS="$HOME/.config/dwm/colors"

dwm-color() {
    echo "$1"      >  "$DWM_COLORS"
    echo "#1b1b1b" >> "$DWM_COLORS"
    echo "#1b1b1b" >> "$DWM_COLORS"
    echo "#1b1b1b" >> "$DWM_COLORS"
    echo "$1"      >> "$DWM_COLORS"
    echo "$1"      >> "$DWM_COLORS"
    dwm-refresh

    echo "$1" > "$HOME/.config/vis/colors/pain"
    echo "#1b1b1b" >> "$HOME/.config/vis/colors/pain"
}

check_argument() {
    if ! [ "$2" ]; then
        echo "$1 requires argument"
        exit 1
    fi
}

ARGV=()

# MAIN:

while [ "$1" ]; do
    case $1 in
        --add-from-file)
            check_argument "$1" "$2"
            FROM_FILE="$2"
            shift
            ;;
        -r | --random)
            RANDOMIZE=1
            ;;
        --get)
            check_argument "$1" "$2"
            GET="$2"
            shift
            ;;
        --index)
            check_argument "$1" "$2"
            INDEX="$2"
            shift
            ;;
        -t | --set-tag)
            check_argument "$1" "$2"
            SET_TAG="$2"
            shift
            ;;
        -i | --include)
            check_argument "$1" "$2"
            INCLUDE="$2"
            shift
            ;;
        -e | --exclude)
            check_argument "$1" "$2"
            EXCLUDE="$2"
            shift
            ;;
        -h | --help)
            usage
            exit 0
            ;;
        *)
            ARGV+=("$1")
            ;;
    esac
    shift
done

if [[ ${#ARGV[@]} != 0 ]]; then
    echo "Error: additional arguments found"
    exit 1
fi

get-wp () {


    if [ "$FROM_FILE" ]; then
        FILE="$(date +"%s").${FROM_FILE##*.}"
        mv "$FROM_FILE" "$FILE"
    else
        FILE="$(date +"%s").${GET##*.}"
        cd "$HOME/Downloads"
        echo "$FILE"
        wget "$GET" -O "$FILE"
        if ! [ "$?" ]; then
            echo "Error: could not download image"
            exit 1
        fi
    fi
    feh --bg-fill "$FILE"

    if ! [ "$SET_TAG" ]; then
        echo "Select the tags for the picture"
        while true; do
            read -p "> " INPUT
            case $INPUT in
                q)
                    rm "$FILE"
                    exit 0
                    ;;
                y | yes)
                    if ! [ "$SET_TAG" ]; then
                        echo "no tags selected"
                    else
                        break
                    fi
                    ;;
                *)
                    SET_TAG="$INPUT"
                    echo "Use this?"
                    ;;
            esac
        done
    fi

    echo "Tag: $SET_TAG"
    echo "Select the color: "

    while true; do
        read -p "> " INPUT
        case $INPUT in
            q)
                rm "$FILE"
                exit 0
                ;;
            p | pick)
                COLOR="$(xcolor)"
                echo "Selected Color: $COLOR"
                dwm-color "$COLOR"
                ;;
            yes)
                if ! [ "$COLOR" ]; then
                    echo "no color selected"
                else
                    break
                fi
                ;;
            *)
                if [[ $INPUT =~ ^#[0-9A-Fa-f]{6}$ ]] ; then
                    COLOR="$INPUT"
                    dwm-color "$COLOR"
                else
                    echo "not a hex color nor command"
                fi
                ;;
        esac
    done

    echo "Config:"
    echo "    File: $FILE"
    echo "     TAG: $SET_TAG"
    echo "   Color: $COLOR"
    echo "Do yout want to add this to $DIR (yes/no)"
    while true; do
        read -p "> " INPUT
        case $INPUT in
            y | yes)
                break
                ;;
            n | no)
                rm "$FILE"
                exit 0
                ;;
            *)
                echo "Error: invalid response"
                ;;
        esac
    done

    mv "$FILE" "$DIR"
    cd "$DIR"
    ficor --add-file "$FILE" -t "$SET_TAG" --set-info "$COLOR"
}

set-wp () {
    cd "$DIR"
    CMD="ficor --info"
    if [ "$INCLUDE" ]; then
        CMD="$CMD --include $INCLUDE"
    fi
    if [ "$EXCLUDE" ]; then
        CMD="$CMD --exclude $EXCLUDE"
    fi
    if [ "$RANDOMIZE" ]; then
        CMD="$CMD | sort -R"
    fi
    if [ "$INDEX" ]; then
        INDEX=$((INDEX + 1))
        CMD="$CMD | head -n $INDEX | tail -n 1"
    else
        CMD="$CMD | head -n 1"
    fi
    set -- $(eval "$CMD")
    FILE="$1"
    COLOR="$2"

    feh --bg-scale "$FILE"
    dwm-color "$COLOR"
}

if [[ "$GET" || "$FROM_FILE" ]]; then
    get-wp
else
    set-wp
fi
